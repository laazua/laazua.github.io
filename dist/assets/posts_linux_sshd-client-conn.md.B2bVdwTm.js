import{_ as n,c as a,o as p,af as e}from"./chunks/framework.BKhkn9_V.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/linux/sshd-client-conn.md","filePath":"posts/linux/sshd-client-conn.md"}'),l={name:"posts/linux/sshd-client-conn.md"};function i(t,s,c,o,r,h){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h5 id="ssh客户端连接配置" tabindex="-1">ssh客户端连接配置 <a class="header-anchor" href="#ssh客户端连接配置" aria-label="Permalink to “ssh客户端连接配置”">​</a></h5><p>~/.ssh/config - SSH 用户客户端配置<br> 作用: 配置 SSH 客户端的连接参数，可以简化连接命令、管理多个 SSH 连接配置<br> 优先级高于 /etc/ssh/ssh_config</p><ul><li><strong>配置示例</strong></li></ul><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>###### 主机配置 ######</span></span>
<span class="line"><span># 匹配所有主机</span></span>
<span class="line"><span>Host *</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 匹配特定主机名</span></span>
<span class="line"><span>Host example.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 使用通配符</span></span>
<span class="line"><span>Host *.example.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 别名配置</span></span>
<span class="line"><span>Host myserver</span></span>
<span class="line"><span>    HostName example.com</span></span>
<span class="line"><span>    User username</span></span>
<span class="line"><span>    ProxyCommand ssh gateway-user@gateway.company.com -W %h:%p</span></span>
<span class="line"><span>    ServerAliveInterval 30</span></span>
<span class="line"><span>    TCPKeepAlive yes</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### 连接参数 ######</span></span>
<span class="line"><span>Host myserver</span></span>
<span class="line"><span>    HostName 192.168.1.100    # 实际主机名或IP</span></span>
<span class="line"><span>    User username             # 登录用户名</span></span>
<span class="line"><span>    Port 2222                 # SSH端口（默认22）</span></span>
<span class="line"><span>    IdentityFile ~/.ssh/id_rsa # 私钥文件路径</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### 认证相关 ######</span></span>
<span class="line"><span>Host myserver</span></span>
<span class="line"><span>    PreferredAuthentications publickey,password</span></span>
<span class="line"><span>    PubkeyAuthentication yes</span></span>
<span class="line"><span>    PasswordAuthentication no</span></span>
<span class="line"><span>    IdentitiesOnly yes        # 只使用指定的IdentityFile</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### 代理跳板 ######</span></span>
<span class="line"><span># SSH代理转发</span></span>
<span class="line"><span>Host jumpserver</span></span>
<span class="line"><span>    HostName jump.example.com</span></span>
<span class="line"><span>    ForwardAgent yes          # 代理转发</span></span>
<span class="line"><span>    ProxyJump user@bastion    # 跳板机</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 本地端口转发</span></span>
<span class="line"><span>Host tunnel</span></span>
<span class="line"><span>    LocalForward 8080 localhost:80</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### 连接控制 ######</span></span>
<span class="line"><span>Host myserver</span></span>
<span class="line"><span>    ConnectTimeout 30         # 连接超时时间</span></span>
<span class="line"><span>    ServerAliveInterval 60    # 保持连接间隔</span></span>
<span class="line"><span>    ServerAliveCountMax 3     # 保持连接次数</span></span>
<span class="line"><span>    TCPKeepAlive yes          # TCP保持连接</span></span>
<span class="line"><span></span></span>
<span class="line"><span>###### 多路复用 ######</span></span>
<span class="line"><span>Host myserver</span></span>
<span class="line"><span>    ControlMaster auto        # 启用连接复用</span></span>
<span class="line"><span>    ControlPath ~/.ssh/cm-%r@%h:%p</span></span>
<span class="line"><span>    ControlPersist 10m        # 连接保持时间</span></span></code></pre></div>`,4)])])}const u=n(l,[["render",i]]);export{d as __pageData,u as default};
